{## Đ Defaulting Semantics #}

{## Operation Overriding/Overloading
 # - How operators and magic methods work in Đ
 #
 # There is no true overloading in Đ, but with defaulting semantics added to
 # the overriding mechanism, overloading is simulated.
 #
 #} {

  {## Operator Procedures
   # - Declaration, Definition and Overriding
   #} {
    ; # nested code block(s)
  }

  {## Magic Object Methods
   # - summary
   # details
   #} {

    {## Left-Hand-Side and Right-Hand-Side
     # - summary
     # details
     #} {
      ; # nested code block(s)
    }

    {## Method Resolution Order
     # - The mro mechanism is the same as in Python
     #} {
      ; # nested code block(s)
    }

  }

  {## Defaulting
   # - In favor of more specific operation implementations
   #
   # An operation can be applicable to the supplied operands, but somehow too
   # general to be the most favorable, in this case it can return a default
   # expression to indicate more specific operations are preferable, but in
   # lieu of unfound such operations, the expression for default could be
   # evaluated for the final result.
   #} { export edh'defaulting = bookmark

  }

}
